//
// Copyright 2019
//
// @author: Denys Nahurnyi
// @email:  dnahurnyi@gmail.com
// ---------------------------------------------------------------------------
syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "pb/commonStr.proto";

message User {
  string name = 1;
  string surname = 2;
  string username = 3;
  int64 success = 4;
  string id = 5;
  repeated string deal_docs = 6;
  repeated string offerings = 7;
  repeated string accepted = 8;
  repeated string participating = 9;
  repeated string deal_results = 10;
  bool is_judge = 11;
  JudgeProfile judge_profile = 12;
}

message JudgeProfile {
  repeated string propositions = 1;
  // For now there will be only one judge on one deal, so once judge accept - it starts to participate
  repeated string participatings = 2; 
  repeated Decision decisions = 3; 
  int64 justice = 4;
}

message Decision {
  string deal_id = 1;
  string winner = 2;
  string when = 3;
}

message CreateUserReq {
  ReqHdr req_hdr = 1;
  User user = 2;
}

message CreateUserResp {
  RespHdr resp_hdr = 1;
  string user_id = 2;
}

message UpdateUserReq {
  ReqHdr req_hdr = 1;
  User user = 2;
}

message UpdateUserResp {
  RespHdr resp_hdr = 1;
  User user = 2;
}

message GetUserReq {
  ReqHdr req_hdr = 1;
}

message GetUserResp {
  RespHdr resp_hdr = 1;
  User user = 2;
}

message DeleteUserReq {
  ReqHdr req_hdr = 1;
}

message DeleteUserResp {
  RespHdr resp_hdr = 1;
  User user = 2;
}

message CreateDealDocumentReq {
  ReqHdr req_hdr = 1;
  Pact deal_document = 2;
}

message CreateDealDocumentResp {
  RespHdr resp_hdr = 1;
  string deal_document_id = 2;
}

message GetDealDocumentReq {
  ReqHdr req_hdr = 1;
  string deal_document_id = 2;
}

message GetDealDocumentResp {
  RespHdr resp_hdr = 1;
  DealDocument deal_document = 2;
}

message OfferDealDocumentReq {
  ReqHdr req_hdr = 1;
  string deal_doc_id = 2;
  string username = 3;
  bool to_judge = 4;
}

message OfferDealDocumentResp {
  RespHdr resp_hdr = 1;
}

message AcceptDealDocumentReq {
  ReqHdr req_hdr = 1;
  string deal_doc_id = 2;
  SideType side_type = 3;
}

message AcceptDealDocumentResp {
  RespHdr resp_hdr = 1;
}

message JudgeAcceptDealDocumentReq {
  ReqHdr req_hdr = 1;
  string deal_doc_id = 2;
}

message JudgeAcceptDealDocumentResp {
  RespHdr resp_hdr = 1;
}

message DealTimeoutReq {
  ReqHdr req_hdr = 1;
  string deal_document_id = 2;
}

message DealTimeoutResp {
  RespHdr resp_hdr = 1;
}

message JudgeDecideReq {
  ReqHdr req_hdr = 1;
  string deal_document_id = 2;
  bool red_won = 3;
}

message JudgeDecideResp {
  RespHdr resp_hdr = 1;
}

message CreateBlameDocumentReq {
  ReqHdr req_hdr = 1;
  string blamed_deal_id = 2;
  string blame_reson = 3;
}

message CreateBlameDocumentResp {
  RespHdr resp_hdr = 1;
  string blame_document_id = 2;
}

message JoinBlameReq {
  ReqHdr req_hdr = 1;
  string blame_id = 2;
}

message JoinBlameResp {
  RespHdr resp_hdr = 1;
}

message ActivateBlameReq {
  ReqHdr req_hdr = 1;
  string blame_id = 2;
}

message ActivateBlameResp {
  RespHdr resp_hdr = 1;
}

service DataService {
  rpc CreateUser (CreateUserReq) returns (CreateUserResp) {
    option (google.api.http) = {
        post: "/v1/data/user",
        body: "*"
    };
  }
  rpc GetUser (GetUserReq) returns (GetUserResp) {
    option (google.api.http) = {
        get: "/v1/data/user"
    };
  }
  rpc DeleteUser (DeleteUserReq) returns (DeleteUserResp) {
    option (google.api.http) = {
        delete: "/v1/data/user"
    };
  }
  rpc UpdateUser (UpdateUserReq) returns (UpdateUserResp) {
    option (google.api.http) = {
        patch: "/v1/data/user",
        body: "*"
    };
  }
  rpc ExistenceCheck (EmptyReq) returns (EmptyResp) {
    option (google.api.http) = {
        get: "/*",
    };
  }
  rpc CreateDealDocument (CreateDealDocumentReq) returns (CreateDealDocumentResp) {
    option (google.api.http) = {
        post: "/v1/data/dealDoc",
        body: "*"
    };
  }
  rpc GetDealDocument (GetDealDocumentReq) returns (GetDealDocumentResp) {
    option (google.api.http) = {
        get: "/v1/data/dealDoc"
    };
  }
  rpc OfferDealDocument (OfferDealDocumentReq) returns (OfferDealDocumentResp) {
    option (google.api.http) = {
        post: "/v1/data/deal/offer",
        body: "*"
    };
  }
  rpc AcceptDealDocument (AcceptDealDocumentReq) returns (AcceptDealDocumentResp) {
    option (google.api.http) = {
        post: "/v1/data/deal/accept",
        body: "*"
    };
  }
  rpc JudgeAcceptDealDocument (JudgeAcceptDealDocumentReq) returns (JudgeAcceptDealDocumentResp) {
    option (google.api.http) = {
        post: "/v1/data/judge/accept",
        body: "*"
    };
  }
  rpc DealTimeout(DealTimeoutReq) returns (DealTimeoutResp) {}
  rpc JudgeDecide (JudgeDecideReq) returns (JudgeDecideResp) {
    option (google.api.http) = {
        post: "/v1/data/judge/decide",
        body: "*"
    };
  }
  rpc CreateBlameDocument (CreateBlameDocumentReq) returns (CreateBlameDocumentResp) {
    option (google.api.http) = {
        post: "/v1/data/blameDoc",
        body: "*"
    };
  }
  rpc JoinBlame (JoinBlameReq) returns (JoinBlameResp) {
    option (google.api.http) = {
        post: "/v1/data/blame/join",
        body: "*"
    };
  }
  rpc ActivateBlame (ActivateBlameReq) returns (ActivateBlameResp) {
    option (google.api.http) = {
        post: "/v1/data/blame/activate",
        body: "*"
    };
  }
}

